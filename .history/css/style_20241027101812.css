/* ============================
   Global Styles
=============================== */
* {
  margin: 0; /* Reset default margin for all elements */
  padding: 0; /* Reset default padding for all elements */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
}

/* ============================
   Body Styles
=============================== */
body {
  font-family: "Poppins", sans-serif; /* Set the font for the entire page */
  background: #000925; /* Set the initial background color */
  overflow: hidden; /* Prevent scrolling on the body */
}

/* ============================
   Weather Animation
=============================== */
body.weather {
  animation: back_ground 70s linear infinite alternate; /* Apply background animation */
}

/* ============================
   Keyframes for Background Animation
=============================== */
@keyframes back_ground {
  0% {
    background-color: #000925; /* Initial background color */
  }
  50% {
    background-color: rgb(25, 25, 25); /* Midpoint background color */
  }
  70% {
    background-color: skyblue; /* Light blue background */
  }
  100% {
    background-color: rgb(228, 102, 0); /* Final background color */
  }
}

/* ============================
   Control Panel Styles
=============================== */
.control-panel {
  position: fixed; /* Keep the control panel fixed in view */
  top: 10px; /* Position from the top */
  left: 20px; /* Position from the left */
  z-index: 999; /* Ensure it appears above other elements */
}

.control-btns {
  display: flex; /* Use flexbox for layout */
  align-items: center; /* Center items vertically */
  gap: 20px; /* Space between buttons */
}

/* ============================
   Score, Health, and Level Text Styles
=============================== */
.score,
.Health,
.goldenEnergies,
.level-text,
#stopwatch {
  color: white; /* Set text color to white */
  font-size: 25px; /* Set font size */
  font-weight: 800; /* Set font weight to bold */
}

/* ============================
   Ground Styles
=============================== */
.ground {
  position: fixed; /* Fix ground position at the bottom */
  bottom: 0; /* Align to the bottom */
  left: 0; /* Align to the left */
  background-color: rgb(62, 26, 0); /* Ground color */
  width: 100vw; /* Full width of viewport */
  height: 9vh; /* Height relative to viewport height */
}

.ground::after {
  content: ""; /* Create a pseudo-element */
  position: absolute; /* Position it absolutely within the ground */
  top: 0; /* Align to the top */
  left: 0; /* Align to the left */
  background-color: green; /* Set color for the top part of the ground */
  width: inherit; /* Inherit width from the ground */
  height: 2.5vh; /* Set height relative to viewport height */
}

/* ============================
   Trees Styles
=============================== */
.trees {
  position: absolute; /* Position trees absolutely */
  bottom: 100%; /* Position trees above the ground */
  left: 0; /* Align to the left */
  display: flex; /* Use flexbox for layout */
  z-index: -11; /* Ensure it appears behind other elements */
}

.densetree {
  transform: translateY(30px) !important; /* Shift dense trees downward */
}

/* ============================
   Objects Styles
=============================== */
.objects {
  position: absolute; /* Position objects absolutely */
  top: -75px; /* Position above the top of the screen */
  left: 30%; /* Offset from the left */
  display: flex; /* Use flexbox for layout */
  gap: 350px; /* Space between objects */
  z-index: 9; /* Ensure it appears above the ground */
}

/* ============================
   Energy and First Aid Styles
=============================== */
.chopped-tree-energy,
.chopped-tree-first-aid {
  position: relative; /* Position relative to their container */
}

.t-energy,
.t-first-aid {
  position: absolute; /* Position absolutely within their container */
  top: -35px; /* Offset from the top */
  left: 62px; /* Offset from the left */
}

/* ============================
   Ghost Animation Styles
=============================== */
.ghost img {
  /* animation: ghostMoving 0.8s linear infinite alternate; */
  opacity: 0; /* Start invisible */
}

.ghost img.active {
  opacity: 1; /* Become visible when active */
  animation: ghostMoving 1s linear infinite alternate; /* Apply ghost movement animation */
}

/* ============================
   Keyframes for Ghost Movement
=============================== */
@keyframes ghostMoving {
  0% {
    transform: translate(200px, -83px); /* Start position for ghost */
  }
  100% {
    transform: translate(1px, -150px); /* End position for ghost */
  }
}

/* ============================
   Clouds Styles
=============================== */
.clouds {
  display: flex; /* Use flexbox for layout */
}

.clouds img:nth-child(odd) {
  padding-top: 150px; /* Add padding to odd clouds */
}

.clouds img {
  animation: cloud 19s linear infinite; /* Apply cloud movement animation */
  z-index: -1; /* Ensure clouds appear behind other elements */
}

/* ============================
   Keyframes for Cloud Movement
=============================== */
@keyframes cloud {
  0% {
    transform: translateX(100%); /* Start from the right */
  }
  100% {
    transform: translateX(-100%); /* Move to the left */
  }
}
/* Wolf character styling */
.wolf {
  z-index: 9; /* Ensures the wolf appears above other elements */
  transition: all 0.2s linear; /* Smooth transition for properties */
  animation: wolf 2.5s alternate infinite; /* Animates the wolf's movement */
}

/* Keyframes for wolf animation */
@keyframes wolf {
  0% {
    transform: translate(800px, -45px); /* Starting position off-screen */
  }
  100% {
    transform: translate(0, -45px); /* Ending position in view */
  }
}

/* Spike character styling */
.spike {
  transform: translateY(8%); /* Initial vertical position adjustment */
  animation: upDown 0.6s linear infinite alternate; /* Creates up and down movement */
}

/* Keyframes for up and down animation */
@keyframes upDown {
  0% {
    transform: translateY(5%); /* Starting position */
  }
  100% {
    transform: translateY(20%); /* Ending position */
  }
}

/* Black rock styling */
.black_rock {
  transform: translateY(-145px); /* Adjusts the position upward */
}

/* Styling for multiple snowman elements */
.snowman1, .snowman2, .snowman5, .snowman6, .snowman7, .snowman8, .snowman9 {
  transform: translateY(-175px); /* Raises the snowman up */
}

/* Styling for snowman answer boxes */
.snowman1_ans,
.snowman2_ans,
.snowman3_ans,
.snowman4_ans,
.snowman6_ans,
.snowman7_ans,
.snowman8_ans,
.snowman9_ans {
  position: absolute; /* Positioning relative to the nearest positioned ancestor */
  top: 10%; /* Positioning from the top of the container */
  left: 50%; /* Centering horizontally */
  transform: translate(-50%, -50%); /* Centering the element */
  background-color: white; /* White background for visibility */
  padding: 20px 80px; /* Internal spacing */
  border: 3px solid black; /* Border styling */
  border-radius: 20px; /* Rounded corners */
  visibility: hidden; /* Hidden by default */
}

/* Final snowman visibility */
.snowman_final {
  visibility: hidden; /* Hidden by default */
}

/* Meditation container styling */
.meditation-container {
  position: fixed; /* Fixed positioning for overlay effect */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust to center the element */
  visibility: hidden; /* Hidden by default */
  z-index: 1000; /* High z-index to appear above other elements */
  background-color: rgba(0, 0, 0, 0.9); /* Dark background for emphasis */
  padding: 20px; /* Internal spacing */
  border-radius: 10px; /* Rounded corners */
  text-align: center; /* Center text alignment */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow effect */
}

/* Video popup styling */
#video-popup {
  display: none; /* Hidden by default */
}

#video-popup.active {
  display: block; /* Show popup when active */
}

.popup-content {
  color: white; /* Text color for popup */
}

/* Close button styling */
#close-popup {
  margin-top: 20px; /* Space above the button */
  padding: 10px 20px; /* Button padding */
  background-color: #ff5c5c; /* Button background color */
  color: white; /* Button text color */
  border: none; /* Remove border */
  border-radius: 5px; /* Rounded corners */
  cursor: pointer; /* Change cursor to pointer on hover */
}

#close-popup:hover {
  background-color: #ff2c2c; /* Change background color on hover */
}

/* Puzzle container styling */
.puzzle-container {
  display: grid; /* Use grid layout for puzzle pieces */
  grid-template-columns: repeat(3, 1fr); /* Three equal columns */
  gap: 2px; /* Space between pieces */
}

.puzzle-container canvas {
  cursor: pointer; /* Change cursor to indicate clickability */
  border: 1px solid #ccc; /* Optional border for canvas */
}

/* Bear character styling */
.bear {
  z-index: 9; /* Ensures the bear appears above other elements */
  transform: translateY(0px); /* Initial position */
  animation: bear 2.5s alternate infinite; /* Animates the bear's movement */
}

/* Keyframes for bear animation */
@keyframes bear {
  0% {
    transform: translateX(500px); /* Starting position off-screen */
  }
  100% {
    transform: translateX(0); /* Ending position in view */
  }
}

/* Space element styling */
.space {
  margin-left: 350px; /* Left margin for spacing */
}

/* First aid item styling */
.first-aid {
  transform: translateY(8%); /* Initial vertical position adjustment */
}

/* River styling */
.river {
  z-index: 9; /* Ensures the river appears above other elements */
  transform: translateY(15.5%); /* Adjusts the position slightly */
}

/* Hermit character styling */
.hermit,
.hermit1 {
  transform: translateY(-41%); /* Adjusts the position upward */
}

/* Flexbox display utility */
.d-flex {
  display: flex; /* Enables flexbox layout */
}

.sand_storm {
  transform: translateY(-60%);
  transition: transform 0.5s ease; /* Smooth transition */
  /* animation: sandstorm 5s linear infinite forwards; */
}

@keyframes sandstorm {
    0%{
        transform: scale(1);
        transform: translateX(100px);
    }
    100%{
        transform: scale(2);
        transform: translateX(-600px);
    }
}
body.rain {
  background: url("../images/rain.gif");
  background-size: contain;
  background-repeat: repeat;
}

body.thunderstorm {
  background: url("../images/thunder.gif");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

#gameCanvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 10;
}

#player {
  position: absolute;
  bottom: 8%;
  left: 10%;
  z-index: 10; /* Ensure the player is on top of other elements */
}
#player img {
  width: 80px;
  height: auto;
  display: inline-block;
}
.shield {
  position: absolute;
  top: -50%;
  left: -75%;
}
.show {
  visibility: visible !important;
}
.shield img {
  width: 200px !important;
  height: 200px !important;
  visibility: hidden;
}

.fade-out {
  transition: opacity 0.3s ease-out;
  opacity: 0;
}

.objects img {
  display: inline-block;
}

/* CSS for Jump Animation */
#player img {
  position: relative;
  bottom: 0;
  transition: bottom 0.3s ease;
}

#player img.jump,
.shield img.jump {
  animation: jump-animation 1s ease;
}

@keyframes jump-animation {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-300px);
  } /* Adjust the jump height as needed */
  100% {
    transform: translateY(0);
  }
}

.fade-out {
  transition: opacity 1s ease;
  opacity: 0;
}

.pause_game,
.game_form {
  width: 100%;
  height: 100vh;
  position: relative;
  z-index: 9;
  display: flex;
  align-items: center;
  justify-content: center;
  display: none;
  background-color: #00000056;
  backdrop-filter: blur(4px);
}
.game_form {
  display: block;
}

.game_form form , .pause_game form{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  gap: 20px;
}
.game_form form input {
  padding: 20px 30px;
  border: 2px solid black;
  border-radius: 17px;
  font-size: 20px;
  margin-top: 75px;
}
.game_form form label {
  transform: translateX(150px);
}
.pause_game .form_img,
.game_form .form_img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.form_img{
  z-index: -1;
}
.pause-text,
.form-text {
  position: absolute;
  top: 13%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 40px;
  color: white;
}
.golem{
  transform: translateY(-77px);
}
.pause-close , #abilities_text{
  cursor: pointer;
  text-align: center;
}
#abilities_text{
  font-size: 20px;
  width: 450px;
  top: 100%;
  color: #4e2700;
  margin: 10px 0;
}
.user-text {
  position: absolute;
  top: 42%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 40px;
  color: #b66104;
  text-align: center;
}
a {
  text-decoration: none;
  display: inline-block;
}

.indicator {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 20px;
  height: 20px;
  background-color: red;
  border-radius: 50%;
  display: none; /* Hidden by default */
  z-index: 1000;
}
.animal_indicator {
  position: absolute;
  top: 5%;
  left: 45%;
  color: red;
  font-size: 35px;
  display: none;
  transition: all 0.3s linear;
}

.goldenEnergies {
  display: flex;
  align-items: center;
}

.game_over {
  visibility: hidden;
}
.game_over,
.notification {
  position: absolute;
  top: 10%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 30px;
  color: red;
  text-align: center;
}
.notification {
  color: white;
}

/* memory game  */

@import url("https://fonts.googleapis.com/css?family=Lobster&display=swap");

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

.container,
.container1 {
  position: absolute;
  top: 50%;
  left: 50%;
  max-width: 550px;
  width: 90%;
  margin: auto;
  transform: translate(-50%, -50%);
  visibility: hidden;
  z-index: 999;
}
.container h2,
.container1 h2 {
  text-align: center;
  color: white;
  font-size: 35px;
  margin-bottom: 20px;
}

.board,
.board1 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 10px;
}

@media screen and (min-width: 480px) {
  .board,
  .board1 {
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 15px;
  }
}

.card {
  position: relative;
  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.1);
  padding-bottom: 100%;
  border-radius: 5px;
  cursor: pointer;
  color: #ccc;
  font-size: 12.5vw;
  background: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,
    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
}

.card.is-match {
  background-color: #99ce2a;
  animation: match 0.5s ease-in-out;
  cursor: default;
}

.card.is-flipped {
  /* Temporary style for flipped card */
  background-color: #fff;
}

@media screen and (min-width: 800px) {
  .card {
    font-size: 100px;
  }
}

@keyframes match {
  0% {
    transform: scale(1);
  }
  40% {
    transform: scale(1.08);
  }
  60% {
    transform: scale(1);
  }
  80% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

#character_gender {
  background-color: #A24B3A;
  padding: 20px 20px;
  border-radius: 15px;
  color: white;
  border: 2px solid black;
}
.hidden {
  visibility: hidden !important;
}


/* quiz game  */

/* Main and scoreboard containers styling */
.quiz-container,
.scoreboard-container {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, 10%);
  background: #fff;
  border-radius: 20px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  width: 90%;
  max-width: 600px; /* Adjust maximum width */
  padding: 30px;
  text-align: center;
  margin-bottom: 30px;
  z-index: 99999;
}

/* Header section with question number, timer, and score */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 20px;
  border-bottom: 2px solid #eee;
}

/* Styling for question number, timer, and score elements */
#question-number,
#timer,
#score {
  font-size: 1.2em;
  color: #777;
}

/* Timer element with color transition */
#timer {
  color: #e74c3c; /* Initial color */
  transition: color 0.3s ease-in-out; /* Smooth transition for color change */
}

/* Progress bar container */
.progress-container {
  width: 100%;
  background: #f2f2f2;
  border-radius: 15px;
  overflow: hidden;
  margin: 30px 0;
}

/* Progress bar with width transition */
.progress-bar {
  width: 0;
  height: 10px;
  background: #0acf83;
  transition: width 0.5s ease-in-out;
}

/* Main section with question text */
.main_section {
  margin: 30px 0;

}

/* Question text styling */
h2 {
  font-size: 2em;
  color: #333;
  margin-bottom: 20px;
}

/* Options container */
.options {
  display: flex;
  flex-direction: column;
  text-align: left;
  margin-top: 20px;
}

/* Styling for answer options */
label {
  background: #f8f9fa;
  border-radius: 12px;
  padding: 15px;
  margin: 10px 0;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.6s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Radio input styling */
input[type="radio"] {
  margin-right: 12px;
}

/* Footer section with next button */
footer {
  display: flex;
  justify-content: center;
}

/* Next and restart buttons styling */
#next-button,
#restart-button {
  background: #0acf83;
  color: #fff;
  border: none;
  border-radius: 12px;
  padding: 15px 30px;
  cursor: pointer;
  font-size: 1.2em;
  transition: background-color 0.3s, transform 0.2s, box-shadow 0.3s;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

/* Hover effect for options */
.options label:hover {
  background-color: #e0e0e0; /* Lighter background on hover */
  transform: translateY(-3px); /* Move up slightly on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Slightly larger shadow on hover */
}

/* Hover effect for progress bar */
.progress-bar:hover {
  background-color: #09ca73; /* Brighter color on hover */
}

/* Hover effect for next and restart buttons */
#next-button:hover,
#restart-button:hover {
  background-color: #09ca73; /* Brighter color on hover */
  transform: scale(1.05); /* Slightly larger scale on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Slightly larger shadow on hover */
}

/* Scoreboard container and table styling */
.scoreboard-container table {
  width: 100%;
  border-collapse: collapse;
}

/* Scoreboard table header and cell styling */
.scoreboard-container th,
.scoreboard-container td {
  border: 1px solid #ddd;
  padding: 12px;
}

.scoreboard-container th {
  background-color: #f2f2f2;
  color: #333;
}

/* Question text and options animation transitions */
#question-text {
  transition: opacity 0.4s ease-in-out; /* Smooth opacity transition */
}

.options label:hover {
  opacity: 0.9; /* Slight opacity decrease on hover */
}

/* Responsive styles */
@media screen and (max-width: 768px) {
  .quiz-container,
  .scoreboard-container {
    width: 90%; /* Adjust width for smaller screens */
    max-width: 90%; /* Ensure maximum width doesn't exceed screen size */
  }

  h2 {
    font-size: 1.8em; /* Adjust font size */
  }

  #next-button,
  #restart-button {
    padding: 12px 24px; /* Adjust button padding */
    font-size: 1em; /* Adjust button font size */
  }

  .options label {
    padding: 12px; /* Smaller padding for options */
  }
}

@media screen and (max-width: 600px) {
  .quiz-container,
  .scoreboard-container {
    padding: 20px; /* Adjust padding for smaller screens */
  }

  h2 {
    font-size: 1.6em; /* Further adjust font size */
  }

  #next-button,
  #restart-button {
    padding: 10px 20px; /* Adjust button padding */
    font-size: 0.9em; /* Adjust button font size */
  }

  .options label {
    padding: 12px; /* Smaller padding for options */
  }
}

@media screen and (max-width: 450px) {
  .quiz-container,
  .scoreboard-container {
    padding: 15px; /* Adjust padding for very small screens */
  }

  h2 {
    font-size: 1.4em; /* Further adjust font size */
  }

  #next-button,
  #restart-button {
    padding: 8px 16px; /* Adjust button padding */
    font-size: 0.8em; /* Adjust button font size */
  }

  .options label {
    padding: 10px; /* Smaller padding for options */
  }
}

.meditation {
  transform: translateY(-30px);
}

.puzzle {
  transform: translateY(-30px);
}
