/* ============================
   Global Styles
=============================== */
* {
  margin: 0; /* Reset default margin for all elements */
  padding: 0; /* Reset default padding for all elements */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
}

/* ============================
   Body Styles
=============================== */
body {
  font-family: "Poppins", sans-serif; /* Set the font for the entire page */
  background: #000925; /* Set the initial background color */
  overflow: hidden; /* Prevent scrolling on the body */
}

/* ============================
   Weather Animation
=============================== */
body.weather {
  animation: back_ground 70s linear infinite forwards; /* Apply background animation */
}

/* ============================
   Keyframes for Background Animation
=============================== */
@keyframes back_ground {
  0% {
    background-color: #000925; /* Initial background color */
  }
  50% {
    background-color: rgb(25, 25, 25); /* Midpoint background color */
  }
  70% {
    background-color: skyblue; /* Light blue background */
  }
  100% {
    background-color: rgb(228, 102, 0); /* Final background color */
  }
}

/* ============================
   Control Panel Styles
=============================== */
.control-panel {
  position: fixed; /* Keep the control panel fixed in view */
  top: 10px; /* Position from the top */
  left: 20px; /* Position from the left */
  z-index: 999; /* Ensure it appears above other elements */
}

.control-btns {
  display: flex; /* Use flexbox for layout */
  align-items: center; /* Center items vertically */
  gap: 20px; /* Space between buttons */
}

/* ============================
   Score, Health, and Level Text Styles
=============================== */
.score,
.Health,
.goldenEnergies,
.level-text,
#stopwatch {
  color: white; /* Set text color to white */
  font-size: 25px; /* Set font size */
  font-weight: 800; /* Set font weight to bold */
}

/* ============================
   Ground Styles
=============================== */
.ground {
  position: fixed; /* Fix ground position at the bottom */
  bottom: 0; /* Align to the bottom */
  left: 0; /* Align to the left */
  background-color: rgb(62, 26, 0); /* Ground color */
  width: 100vw; /* Full width of viewport */
  height: 9vh; /* Height relative to viewport height */
}

.ground::after {
  content: ""; /* Create a pseudo-element */
  position: absolute; /* Position it absolutely within the ground */
  top: 0; /* Align to the top */
  left: 0; /* Align to the left */
  background-color: green; /* Set color for the top part of the ground */
  width: inherit; /* Inherit width from the ground */
  height: 2.5vh; /* Set height relative to viewport height */
}

/* ============================
   Trees Styles
=============================== */
.trees {
  position: absolute; /* Position trees absolutely */
  bottom: 100%; /* Position trees above the ground */
  left: 0; /* Align to the left */
  display: flex; /* Use flexbox for layout */
  z-index: -11; /* Ensure it appears behind other elements */
}

.densetree {
  transform: translateY(30px) !important; /* Shift dense trees downward */
}

/* ============================
   Objects Styles
=============================== */
.objects {
  position: absolute; /* Position objects absolutely */
  top: -75px; /* Position above the top of the screen */
  left: 30%; /* Offset from the left */
  display: flex; /* Use flexbox for layout */
  gap: 350px; /* Space between objects */
  z-index: 9; /* Ensure it appears above the ground */
}

/* ============================
   Energy and First Aid Styles
=============================== */
.chopped-tree-energy,
.chopped-tree-first-aid {
  position: relative; /* Position relative to their container */
}

.t-energy,
.t-first-aid {
  position: absolute; /* Position absolutely within their container */
  top: -35px; /* Offset from the top */
  left: 62px; /* Offset from the left */
}

/* ============================
   Ghost Animation Styles
=============================== */
.ghost img {
  /* animation: ghostMoving 0.8s linear infinite alternate; */
  opacity: 0; /* Start invisible */
}

.ghost img.active {
  opacity: 1; /* Become visible when active */
  animation: ghostMoving 1s linear infinite alternate; /* Apply ghost movement animation */
}

/* ============================
   Keyframes for Ghost Movement
=============================== */
@keyframes ghostMoving {
  0% {
    transform: translate(200px, -83px); /* Start position for ghost */
  }
  100% {
    transform: translate(1px, -150px); /* End position for ghost */
  }
}

/* ============================
   Clouds Styles
=============================== */
.clouds {
  display: flex; /* Use flexbox for layout */
}

.clouds img:nth-child(odd) {
  padding-top: 150px; /* Add padding to odd clouds */
}

.clouds img {
  animation: cloud 19s linear infinite; /* Apply cloud movement animation */
  z-index: -1; /* Ensure clouds appear behind other elements */
}

/* ============================
   Keyframes for Cloud Movement
=============================== */
@keyframes cloud {
  0% {
    transform: translateX(100%); /* Start from the right */
  }
  100% {
    transform: translateX(-100%); /* Move to the left */
  }
}
/* Wolf character styling */
.wolf {
  z-index: 9; /* Ensures the wolf appears above other elements */
  transition: all 0.2s linear; /* Smooth transition for properties */
  animation: wolf 2.5s alternate infinite; /* Animates the wolf's movement */
}

/* Keyframes for wolf animation */
@keyframes wolf {
  0% {
    transform: translate(800px, -45px); /* Starting position off-screen */
  }
  100% {
    transform: translate(0, -45px); /* Ending position in view */
  }
}

/* Spike character styling */
.spike {
  transform: translateY(8%); /* Initial vertical position adjustment */
  animation: upDown 0.6s linear infinite alternate; /* Creates up and down movement */
}

/* Keyframes for up and down animation */
@keyframes upDown {
  0% {
    transform: translateY(5%); /* Starting position */
  }
  100% {
    transform: translateY(20%); /* Ending position */
  }
}

/* Black rock styling */
.black_rock {
  transform: translateY(-145px); /* Adjusts the position upward */
}

/* Styling for multiple snowman elements */
.snowman1, .snowman2, .snowman5, .snowman6, .snowman7, .snowman8, .snowman9 {
  transform: translateY(-175px); /* Raises the snowman up */
}

/* Styling for snowman answer boxes */
.snowman1_ans,
.snowman2_ans,
.snowman3_ans,
.snowman4_ans,
.snowman6_ans,
.snowman7_ans,
.snowman8_ans,
.snowman9_ans {
  position: absolute; /* Positioning relative to the nearest positioned ancestor */
  top: 10%; /* Positioning from the top of the container */
  left: 50%; /* Centering horizontally */
  transform: translate(-50%, -50%); /* Centering the element */
  background-color: white; /* White background for visibility */
  padding: 20px 80px; /* Internal spacing */
  border: 3px solid black; /* Border styling */
  border-radius: 20px; /* Rounded corners */
  visibility: hidden; /* Hidden by default */
}

/* Final snowman visibility */
.snowman_final {
  visibility: hidden; /* Hidden by default */
}

/* Meditation container styling */
.meditation-container {
  position: fixed; /* Fixed positioning for overlay effect */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust to center the element */
  visibility: hidden; /* Hidden by default */
  z-index: 1000; /* High z-index to appear above other elements */
  background-color: rgba(0, 0, 0, 0.9); /* Dark background for emphasis */
  padding: 20px; /* Internal spacing */
  border-radius: 10px; /* Rounded corners */
  text-align: center; /* Center text alignment */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow effect */
}

/* Video popup styling */
#video-popup {
  display: none; /* Hidden by default */
}

#video-popup.active {
  display: block; /* Show popup when active */
}

.popup-content {
  color: white; /* Text color for popup */
}

/* Close button styling */
#close-popup {
  margin-top: 20px; /* Space above the button */
  padding: 10px 20px; /* Button padding */
  background-color: #ff5c5c; /* Button background color */
  color: white; /* Button text color */
  border: none; /* Remove border */
  border-radius: 5px; /* Rounded corners */
  cursor: pointer; /* Change cursor to pointer on hover */
}

#close-popup:hover {
  background-color: #ff2c2c; /* Change background color on hover */
}

/* Puzzle container styling */
.puzzle-container {
  display: grid; /* Use grid layout for puzzle pieces */
  grid-template-columns: repeat(3, 1fr); /* Three equal columns */
  gap: 2px; /* Space between pieces */
}

.puzzle-container canvas {
  cursor: pointer; /* Change cursor to indicate clickability */
  border: 1px solid #ccc; /* Optional border for canvas */
}

.wolf-grow{
  transform: translateY(-20px) scale(1.3); /* Scale the animal to 1.3 times its normal size */
  transition: transform 0.3s ease-in-out; /* Smooth transition */
}
.river-grow{
  transform: translateY(43px) scale(1.5); /* Scale the animal to 1.3 times its normal size */
  transition: transform 0.3s ease-in-out; /* Smooth transition */
}
.bear-grow{
  transform: scale(1.3); /* Scale the animal to 1.3 times its normal size */
  transition: transform 0.3s ease-in-out; /* Smooth transition */
}
/* Bear character styling */
.bear {
  z-index: 9; /* Ensures the bear appears above other elements */
  transition: all 0.3s linear;
  transform: translateY(0px); /* Initial position */
  animation: bear 2.5s alternate infinite; /* Animates the bear's movement */
}

/* Keyframes for bear animation */
@keyframes bear {
  0% {
    transform: translateX(500px); /* Starting position off-screen */
  }
  100% {
    transform: translateX(0); /* Ending position in view */
  }
}

/* Space element styling */
.space {
  margin-left: 350px; /* Left margin for spacing */
}

/* First aid item styling */
.first-aid {
  transform: translateY(8%); /* Initial vertical position adjustment */
}

/* River styling */
.river {
  z-index: 9; /* Ensures the river appears above other elements */
  transform: translateY(15.5%); /* Adjusts the position slightly */
  /* transition: all 0.3s linear; */
  animation: waves 0.4s infinite;
}

/* Hermit character styling */
.hermit,
.hermit1 {
  transform: translateY(-41%); /* Adjusts the position upward */
}

/* Flexbox display utility */
.d-flex {
  display: flex; /* Enables flexbox layout */
}

.sand_storm {
  transform: translateY(-60%); /* Move the sandstorm up */
  transition: transform 0.5s ease; /* Smooth transition for movement */
  /* animation: sandstorm 5s linear infinite forwards; */ /* Uncomment to activate the sandstorm animation */
}

@keyframes sandstorm {
    0%{
        transform: scale(1); /* Start at normal size */
        transform: translateX(100px); /* Move sandstorm slightly to the right */
    }
    100%{
        transform: scale(2); /* Scale the sandstorm to double its size */
        transform: translateX(-600px); /* Move sandstorm to the left */
    }
}

/* Background styles for weather effects */
body.rain {
  background: url("../images/rain.gif"); /* Set rain GIF as background */
  background-size: contain; /* Scale the background to fit */
  background-repeat: repeat; /* Repeat the background */
}

body.thunderstorm {
  background: url("../images/thunder.gif"); /* Set thunder GIF as background */
  background-size: contain; /* Scale the background to fit */
  background-repeat: no-repeat; /* Do not repeat the background */
  background-position: center; /* Center the background */
}

#gameCanvas {
  position: absolute; /* Position canvas absolutely within parent */
  top: 0; /* Align to top of the viewport */
  left: 0; /* Align to left of the viewport */
  width: 100vw; /* Full viewport width */
  height: 100vh; /* Full viewport height */
  z-index: 10; /* Layer above other elements */
}

#player {
  position: absolute; /* Position player absolutely within parent */
  bottom: 8%; /* Position player 8% from the bottom */
  left: 10%; /* Position player 10% from the left */
  z-index: 10; /* Ensure the player is on top of other elements */
}

#player img {
  width: 80px; /* Set width of player image */
  height: auto; /* Maintain aspect ratio */
  display: inline-block; /* Allow elements to flow inline */
}

.shield {
  position: absolute; /* Position shield absolutely within parent */
  top: -50%; /* Position shield above the player */
  left: -75%; /* Position shield to the left of the player */
}

.show {
  visibility: visible !important; /* Force visibility of element */
}

.shield img {
  width: 200px !important; /* Force width of shield image */
  height: 200px !important; /* Force height of shield image */
  visibility: hidden; /* Hide shield image by default */
}

.fade-out {
  transition: opacity 0.3s ease-out; /* Smooth transition for fading out */
  opacity: 0; /* Set opacity to 0 for fading effect */
}

.objects img {
  display: inline-block; /* Allow objects to flow inline */
}

/* CSS for Jump Animation */
#player img {
  position: relative; /* Position relative to normal flow */
  bottom: 0; /* Start at original position */
  transition: bottom 0.3s ease; /* Smooth transition for movement */
}

#player img.jump,
.shield img.jump {
  animation: jump-animation 1s ease; /* Apply jump animation */
}

@keyframes jump-animation {
  0% {
    transform: translateY(0); /* Start at original position */
  }
  50% {
    transform: translateY(-300px); /* Move up for jump height */
  } /* Adjust the jump height as needed */
  100% {
    transform: translateY(0); /* Return to original position */
  }
}

.fade-out {
  transition: opacity 1s ease; /* Smooth transition for fading out */
  opacity: 0; /* Set opacity to 0 for fading effect */
}

/* Pause and game form styles */
.pause_game,
.game_form {
  width: 100%; /* Full width of the viewport */
  height: 100vh; /* Full height of the viewport */
  position: relative; /* Relative positioning within parent */
  z-index: 9; /* Layer above other elements */
  display: flex; /* Use flexbox for alignment */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Center items horizontally */
  display: none; /* Hidden by default */
  background-color: #00000056; /* Semi-transparent black background */
  backdrop-filter: blur(4px); /* Blur the background */
}

.game_form {
  display: block; /* Show the game form */
}

.game_form form, .pause_game form {
  position: absolute; /* Position forms absolutely within parent */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust for centering */
  display: flex; /* Use flexbox for alignment */
  flex-direction: column; /* Arrange elements vertically */
  gap: 20px; /* Space between form elements */
}

.game_form form input {
  padding: 20px 30px; /* Padding for input fields */
  border: 2px solid black; /* Black border around input fields */
  border-radius: 17px; /* Rounded corners for input fields */
  font-size: 20px; /* Font size for input fields */
  margin-top: 75px; /* Space above the input fields */
}

.game_form form label {
  transform: translateX(150px); /* Move label for alignment */
}

.pause_game .form_img,
.game_form .form_img {
  position: absolute; /* Position form image absolutely */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust for centering */
}

.form_img {
  z-index: -1; /* Layer behind other elements */
}

.pause-text,
.form-text {
  position: absolute; /* Position text absolutely */
  top: 13%; /* Position near the top of the viewport */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust for centering */
  font-size: 40px; /* Font size for text */
  color: white; /* White text color */
}

.golem {
  transform: translateY(-77px); /* Move golem up */
}

.pause-close,
#abilities_text {
  cursor: pointer; /* Change cursor to pointer on hover */
  text-align: center; /* Center text alignment */
}

#abilities_text {
  font-size: 20px; /* Font size for abilities text */
  width: 450px; /* Fixed width for abilities text */
  top: 100%; /* Position at the bottom */
  color: #4e2700; /* Color for abilities text */
  margin: 10px 0; /* Margin for spacing */
}

.user-text {
  position: absolute; /* Position user text absolutely */
  top: 42%; /* Center vertically */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust for centering */
  font-size: 40px; /* Font size for user text */
  color: #b66104; /* Color for user text */
  text-align: center; /* Center text alignment */
}

a {
  text-decoration: none; /* Remove underline from links */
  display: inline-block; /* Allow elements to flow inline */
}

.indicator {
  position: absolute; /* Position indicator absolutely */
  top: 10px; /* Position near the top of the viewport */
  right: 10px; /* Position near the right edge */
  width: 20px; /* Fixed width for indicator */
  height: 20px; /* Fixed height for indicator */
  background-color: red; /* Red background for indicator */
  border-radius: 50%; /* Circular shape for indicator */
  display: none; /* Hidden by default */
  z-index: 1000; /* Layer above other elements */
}

.animal_indicator {
  position: absolute; /* Position animal indicator absolutely */
  top: 5%; /* Position near the top of the viewport */
  left: 45%; /* Center horizontally */
  color: red; /* Red color for animal indicator */
  font-size: 35px; /* Font size for animal indicator */
  display: none; /* Hidden by default */
  transition: all 0.3s linear; /* Smooth transition for visibility */
}

.goldenEnergies {
  display: flex; /* Use flexbox for layout */
  align-items: center; /* Center items vertically */
}

.game_over {
  visibility: hidden; /* Hidden by default */
}

.game_over,
.notification {
  position: absolute; /* Position game over and notification absolutely */
  top: 10%; /* Position near the top of the viewport */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Adjust for centering */
  font-size: 30px; /* Font size for messages */
  color: red; /* Red color for game over message */
  text-align: center; /* Center text alignment */
}

.notification {
  color: white; /* White color for notification */
}

/* Importing Lobster font from Google Fonts for styling */
@import url("https://fonts.googleapis.com/css?family=Lobster&display=swap");

/* Resetting margins, padding, and list styles for unordered lists */
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Main container styles for the game */
.container,
.container1 {
  position: absolute; /* Positioning the container absolutely */
  top: 50%; /* Centering vertically */
  left: 50%; /* Centering horizontally */
  max-width: 550px; /* Maximum width of the container */
  width: 90%; /* Responsive width */
  margin: auto; /* Centering */
  transform: translate(-50%, -50%); /* Adjusting position for centering */
  visibility: hidden; /* Initially hidden */
  z-index: 999; /* High z-index to stay above other elements */
}

/* Header styles for both containers */
.container h2,
.container1 h2 {
  text-align: center; /* Centering text */
  color: white; /* Text color */
  font-size: 35px; /* Font size */
  margin-bottom: 20px; /* Spacing below header */
}

/* Grid layout for the game board */
.board,
.board1 {
  display: grid; /* Using grid display */
  grid-template-columns: repeat(3, 1fr); /* Three columns */
  grid-gap: 10px; /* Space between grid items */
}

/* Media query for larger screens to adjust grid layout */
@media screen and (min-width: 480px) {
  .board,
  .board1 {
    grid-template-columns: repeat(4, 1fr); /* Four columns on larger screens */
    grid-gap: 15px; /* Increased gap between items */
  }
}

/* Styles for each memory card */
.card {
  position: relative; /* Relative positioning for inner elements */
  box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.1); /* Shadow for depth */
  padding-bottom: 100%; /* Aspect ratio for the card */
  border-radius: 5px; /* Rounded corners */
  cursor: pointer; /* Pointer cursor on hover */
  color: #ccc; /* Default text color */
  font-size: 12.5vw; /* Responsive font size based on viewport width */
  background: #fff; /* Background color */
  display: flex; /* Flexbox for centering content */
  align-items: center; /* Centering vertically */
  justify-content: center; /* Centering horizontally */
  background-size: contain; /* Contain background image */
  background-position: center; /* Center background image */
  background-repeat: no-repeat; /* No repeat for background image */
  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, /* Additional shadow for depth */
    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px; /* Additional shadow */
}

/* Styles for matched cards */
.card.is-match {
  background-color: #99ce2a; /* Green background for matched cards */
  animation: match 0.5s ease-in-out; /* Animation for matched cards */
  cursor: default; /* Default cursor for matched cards */
}

/* Temporary styles for flipped cards */
.card.is-flipped {
  background-color: #fff; /* White background when flipped */
}

/* Media query for larger screens to adjust card font size */
@media screen and (min-width: 800px) {
  .card {
    font-size: 100px; /* Larger font size for cards */
  }
}

/* Keyframes for match animation */
@keyframes match {
  0% {
    transform: scale(1); /* Initial scale */
  }
  40% {
    transform: scale(1.08); /* Slightly larger */
  }
  60% {
    transform: scale(1); /* Return to original */
  }
  80% {
    transform: scale(1.05); /* Slightly larger again */
  }
  100% {
    transform: scale(1); /* Final state */
  }
}

/* Styles for character gender selection box */
#character_gender {
  background-color: #A24B3A; /* Background color */
  padding: 20px 20px; /* Padding for content */
  border-radius: 15px; /* Rounded corners */
  color: white; /* Text color */
  border: 2px solid black; /* Border styling */
}

/* Hidden class to make elements invisible */
.hidden {
  visibility: hidden !important; /* Force visibility hidden */
}

/* quiz game  */

/* Main and scoreboard containers styling */
.quiz-container,
.scoreboard-container {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translate(-50%, 10%);
  background: #fff;
  border-radius: 20px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  width: 90%;
  max-width: 600px; /* Adjust maximum width */
  padding: 30px;
  text-align: center;
  margin-bottom: 30px;
  z-index: 99999;
}

/* Header section with question number, timer, and score */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 20px;
  border-bottom: 2px solid #eee;
}

/* Styling for question number, timer, and score elements */
#question-number,
#timer,
#score {
  font-size: 1.2em;
  color: #777;
}

/* Timer element with color transition */
#timer {
  color: #e74c3c; /* Initial color */
  transition: color 0.3s ease-in-out; /* Smooth transition for color change */
}

/* Progress bar container */
.progress-container {
  width: 100%;
  background: #f2f2f2;
  border-radius: 15px;
  overflow: hidden;
  margin: 30px 0;
}

/* Progress bar with width transition */
.progress-bar {
  width: 0;
  height: 10px;
  background: #0acf83;
  transition: width 0.5s ease-in-out;
}

/* Main section with question text */
.main_section {
  margin: 30px 0;

}

/* Question text styling */
h2 {
  font-size: 2em;
  color: #333;
  margin-bottom: 20px;
}

/* Options container */
.options {
  display: flex;
  flex-direction: column;
  text-align: left;
  margin-top: 20px;
}

/* Styling for answer options */
label {
  background: #f8f9fa;
  border-radius: 12px;
  padding: 15px;
  margin: 10px 0;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.6s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Radio input styling */
input[type="radio"] {
  margin-right: 12px;
}

/* Footer section with next button */
footer {
  display: flex;
  justify-content: center;
}

/* Next and restart buttons styling */
#next-button,
#restart-button {
  background: #0acf83;
  color: #fff;
  border: none;
  border-radius: 12px;
  padding: 15px 30px;
  cursor: pointer;
  font-size: 1.2em;
  transition: background-color 0.3s, transform 0.2s, box-shadow 0.3s;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

/* Hover effect for options */
.options label:hover {
  background-color: #e0e0e0; /* Lighter background on hover */
  transform: translateY(-3px); /* Move up slightly on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Slightly larger shadow on hover */
}

/* Hover effect for progress bar */
.progress-bar:hover {
  background-color: #09ca73; /* Brighter color on hover */
}

/* Hover effect for next and restart buttons */
#next-button:hover,
#restart-button:hover {
  background-color: #09ca73; /* Brighter color on hover */
  transform: scale(1.05); /* Slightly larger scale on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Slightly larger shadow on hover */
}

/* Scoreboard container and table styling */
.scoreboard-container table {
  width: 100%;
  border-collapse: collapse;
}

/* Scoreboard table header and cell styling */
.scoreboard-container th,
.scoreboard-container td {
  border: 1px solid #ddd;
  padding: 12px;
}

.scoreboard-container th {
  background-color: #f2f2f2;
  color: #333;
}

/* Question text and options animation transitions */
#question-text {
  transition: opacity 0.4s ease-in-out; /* Smooth opacity transition */
}

.options label:hover {
  opacity: 0.9; /* Slight opacity decrease on hover */
}

/* Responsive styles */

/* Styles for screens with a maximum width of 768px */
@media screen and (max-width: 768px) {
  .quiz-container,
  .scoreboard-container {
    width: 90%; /* Adjust width for smaller screens to take up more space */
    max-width: 90%; /* Ensure maximum width doesn't exceed screen size */
  }

  h2 {
    font-size: 1.8em; /* Adjust font size for headings on smaller screens */
  }

  #next-button,
  #restart-button {
    padding: 12px 24px; /* Adjust button padding for better touch targets */
    font-size: 1em; /* Set button font size for readability */
  }

  .options label {
    padding: 12px; /* Smaller padding for options to fit better on the screen */
  }
}

/* Styles for screens with a maximum width of 600px */
@media screen and (max-width: 600px) {
  .quiz-container,
  .scoreboard-container {
    padding: 20px; /* Adjust padding for smaller screens to improve spacing */
  }

  h2 {
    font-size: 1.6em; /* Further adjust font size for better visibility */
  }

  #next-button,
  #restart-button {
    padding: 10px 20px; /* Adjust button padding to ensure ease of use */
    font-size: 0.9em; /* Adjust button font size for smaller screens */
  }

  .options label {
    padding: 12px; /* Maintain smaller padding for options */
  }
}

/* Styles for screens with a maximum width of 450px */
@media screen and (max-width: 450px) {
  .quiz-container,
  .scoreboard-container {
    padding: 15px; /* Adjust padding for very small screens for better spacing */
  }

  h2 {
    font-size: 1.4em; /* Further adjust font size for readability */
  }

  #next-button,
  #restart-button {
    padding: 8px 16px; /* Reduce button padding for compactness */
    font-size: 0.8em; /* Adjust button font size for smaller screens */
  }

  .options label {
    padding: 10px; /* Smaller padding for options to fit better */
  }
}

/* Styles to move elements upward slightly */
.meditation {
  transform: translateY(-30px); /* Move meditation element upward */
}

.puzzle {
  transform: translateY(-30px); /* Move puzzle element upward */
}
.snakeVisibility { 
  transition: opacity 0.3s ease-out; /* Smooth transition for fading out */
  opacity: 0;
}
.snake{
  animation: snake 2s alternate infinite;
}
@keyframes snake {
  0% {
    transform: translateX(500px); /* Starting position off-screen */
  }
  100% {
    transform: translateX(0); /* Ending position in view */
  }
}